package nodegit;
@:jsRequire("nodegit", "Reference") extern class Reference {
	static function create(repo:Dynamic, name:String, id:Dynamic, force:Float, log_message:String):Promise<Dynamic>;
	static function createMatching(repo:Dynamic, name:String, id:Dynamic, force:Float, current_id:Dynamic, log_message:String):Promise<Dynamic>;
	static function dwim(repo:Dynamic, id:Dynamic, callback:Dynamic):Promise<Dynamic>;
	static function ensureLog(repo:Dynamic, refname:String):Float;
	static function hasLog(repo:Dynamic, refname:String):Dynamic;
	static function isValidName(refname:String):Float;
	static function list(repo:Dynamic):Promise<Array<Dynamic>>;
	static function lookup(repo:Dynamic, id:Dynamic, callback:Dynamic):Promise<Dynamic>;
	static function nameToId(repo:Dynamic, name:String):Promise<Dynamic>;
	static function normalizeName(buffer_out:String, buffer_size:Float, name:String, flags:Float):Dynamic;
	static function remove(repo:Dynamic, name:String):Float;
	static function symbolicCreate(repo:Dynamic, name:String, target:String, force:Float, log_message:String):Promise<Dynamic>;
	static function symbolicCreateMatching(repo:Dynamic, name:String, target:String, force:Float, current_value:String, log_message:String):Promise<Dynamic>;
	function cmp(ref2:Dynamic):Float;
	function delete():Float;
	function isBranch():Dynamic;
	function isConcrete():Bool;
	function isHead():Bool;
	function isNote():Dynamic;
	function isRemote():Dynamic;
	function isSymbolic():Bool;
	function isTag():Dynamic;
	function isValid():Bool;
	function name():String;
	function owner():Dynamic;
	function peel(type:Float):Promise<Dynamic>;
	function rename(new_name:String, force:Float, log_message:String):Promise<Dynamic>;
	function resolve():Promise<Dynamic>;
	function setTarget(id:Dynamic, log_message:String):Promise<Dynamic>;
	function shorthand():String;
	function symbolicSetTarget(target:String, log_message:String):Promise<Dynamic>;
	function symbolicTarget():String;
	function target():Dynamic;
	function targetPeel():Dynamic;
	function toString():String;
	function type():Float;
	static var NORMALIZE : Dynamic;
	static var TYPE : Dynamic;
}